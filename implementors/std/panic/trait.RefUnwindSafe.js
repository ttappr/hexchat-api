(function() {var implementors = {};
implementors["backtrace"] = [{"text":"impl RefUnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SymbolName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BytesOrWideString&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !RefUnwindSafe for BacktraceFmt&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintFmt","synthetic":true,"types":[]},{"text":"impl&lt;'fmt, 'a, 'b&gt; !RefUnwindSafe for BacktraceFrameFmt&lt;'fmt, 'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Backtrace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BacktraceFrame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BacktraceSymbol","synthetic":true,"types":[]}];
implementors["hexchat_api"] = [{"text":"impl RefUnwindSafe for Hook","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChanFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChanType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DccStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DccType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IgnFlag","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContextError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Priority","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Eat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StripFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrefValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventAttrs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HexchatError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hexchat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PluginInfo","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ListItem","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ListIterator","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FieldValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Plugin","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for AsyncResult&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ThreadSafeContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadSafeHexchat","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ThreadSafeListIterator","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ThreadSafeFieldValue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UserData","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()